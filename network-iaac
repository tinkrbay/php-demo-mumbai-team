---
  AWSTemplateFormatVersion: "2010-09-09"
  Description: "myvpc2"
  Parameters:
      VpcName: 
        Type: "String"
      VpcCIDR: 
        Type: "String"
      PublicSubnetACIDR: 
        Type: "String" 
      PublicSubnetBCIDR:
        Type: "String"
  Resources:
    Vpc:
      Type: "AWS::EC2::VPC"
      Properties:
        EnableDnsSupport: "true"
        EnableDnsHostnames: "true"
        CidrBlock:
          Ref: "VpcCIDR"
        Tags:
          -
            Key: "Name"
            Value:
              Ref: "VpcName"
    PublicSubnetA:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "Vpc"
        CidrBlock:
          Ref: "PublicSubnetACIDR"
        MapPublicIpOnLaunch: "true"
        AvailabilityZone: !Sub "${AWS::Region}a"
        Tags:
          -
            Key: "Name"
            Value: !Join [ "-", [ !Ref "VpcName", public1a ] ]
    PublicSubnetB:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "Vpc"
        CidrBlock:
          Ref: "PublicSubnetBCIDR"
        MapPublicIpOnLaunch: "true"
        AvailabilityZone: !Sub "${AWS::Region}b"
        Tags:
          -
            Key: "Name"
            Value: !Join [ "-", [ !Ref "VpcName", public1b ] ]
    Igw:
      Type: "AWS::EC2::InternetGateway"
      Properties:
        Tags:
          -
            Key: "Name"
            Value: !Join [ "-", [ !Ref "VpcName", igw ] ]
    IgwAttachment:
      Type: "AWS::EC2::VPCGatewayAttachment"
      Properties:
        VpcId:
          Ref: "Vpc"
        InternetGatewayId:
          Ref: "Igw"
    PublicRt:
      Type: "AWS::EC2::RouteTable"
      Properties:
        VpcId:
          Ref: "Vpc"
        Tags:
          -
            Key: "Name"
            Value: !Join [ "-", [ !Ref "VpcName", public, rt ] ]
    PublicDefaultRoute:
      Type: "AWS::EC2::Route"
      DependsOn: "IgwAttachment"
      Properties:
        RouteTableId:
          Ref: "PublicRt"
        DestinationCidrBlock: "0.0.0.0/0"
        GatewayId:
          Ref: "Igw"
    PublicRt2PublicSubnetA:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PublicSubnetA"
        RouteTableId:
          Ref: "PublicRt"
    PublicRt2PublicSubnetB:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PublicSubnetB"
        RouteTableId:
          Ref: "PublicRt" 
    PublicNacl:
      Type: "AWS::EC2::NetworkAcl"
      Properties:
        VpcId:
          Ref: "Vpc"
        Tags:
          -
            Key: "Name"
            Value: !Join [ "-", [ !Ref "VpcName", public, nacl ] ]
    PublicNaclInbound:
      Type: "AWS::EC2::NetworkAclEntry"
      Properties:
        NetworkAclId:
          Ref: "PublicNacl"
        RuleNumber: "100"
        Protocol: "-1"
        RuleAction: "allow"
        Egress: "false"
        CidrBlock: "0.0.0.0/0"
        PortRange:
          From: "0"
          To: "65535"
    PublicNaclOutbound:
      Type: "AWS::EC2::NetworkAclEntry"
      Properties:
        NetworkAclId:
          Ref: "PublicNacl"
        RuleNumber: "100"
        Protocol: "-1"
        RuleAction: "allow"
        Egress: "true"
        CidrBlock: "0.0.0.0/0"
        PortRange:
          From: "0"
          To: "65535"
    PublicNacl2PublicSubnetA:
      Type: "AWS::EC2::SubnetNetworkAclAssociation"
      Properties:
        SubnetId:
          Ref: "PublicSubnetA"
        NetworkAclId:
          Ref: "PublicNacl"
    PublicNacl2PublicSubnetB:
      Type: "AWS::EC2::SubnetNetworkAclAssociation"
      Properties:
        SubnetId:
          Ref: "PublicSubnetB"
        NetworkAclId:
          Ref: "PublicNacl" 
    SgAllTraffic:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Allows all inbound and outbound traffic
        GroupName: !Join [ "-", [ !Ref "VpcName", sg, alltraffic ] ]
        VpcId:
          Ref: "Vpc"
        SecurityGroupIngress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0		  
  Outputs:
    VpcId:
      Description: "VPC ID"
      Value:
        Ref: "Vpc"
      Export:
        Name:
          !Sub "${VpcName}-vpcid"
    PublicSubnetA:
      Description: "SubnetId of the public-a subnet"
      Value:
        Ref: "PublicSubnetA"
      Export:
        Name:
          !Sub "${VpcName}-public-a"
    PublicSubnetB:
      Description: "SubnetId of the public-b subnet"
      Value:
        Ref: "PublicSubnetB"
      Export:
        Name:
          !Sub "${VpcName}-public-b"
    PublicRt:
      Description: "Route Table Id of the Public Routing Table"
      Value:
        Ref: "PublicRt"
      Export:
        Name:
          !Sub "${VpcName}-public-rt"
    SgAllTraffic:
      Description: "Seccurity Group Id of the All Traffic group"
      Value: { "Fn::GetAtt" : ["SgAllTraffic", "GroupId"] }
      Export:
        Name:
          !Sub "${VpcName}-sg-alltraffic"
